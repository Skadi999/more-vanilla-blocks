package com.github.skadi999.morevanillablocks.init;

import com.github.skadi999.morevanillablocks.MoreVanillaBlocks;
import net.minecraft.block.*;
import net.minecraft.block.material.Material;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;


public class ModBlocks {
    public static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, MoreVanillaBlocks.MODID);
    public static final RegistryObject<Block> BAMBOO_BLOCK = BLOCKS.register("bamboo_block", () -> new Block(Block.Properties.create(Material.WOOD).hardnessAndResistance(0.3F)));

    public static final RegistryObject<Block> GLOWSTONE_STAIRS = BLOCKS.register("glowstone_stairs", () -> new StairsBlock(Blocks.GLOWSTONE::getDefaultState, Block.Properties.from(Blocks.GLOWSTONE)));
    public static final RegistryObject<Block> ENDSTONE_STAIRS = BLOCKS.register("endstone_stairs", () -> new StairsBlock(Blocks.END_STONE::getDefaultState, Block.Properties.from(Blocks.END_STONE)));
    public static final RegistryObject<Block> OBSIDIAN_STAIRS = BLOCKS.register("obsidian_stairs", () -> new StairsBlock(Blocks.OBSIDIAN::getDefaultState, Block.Properties.from(Blocks.OBSIDIAN)));
    public static final RegistryObject<Block> NETHERRACK_STAIRS = BLOCKS.register("netherrack_stairs", () -> new StairsBlock(Blocks.NETHERRACK::getDefaultState, Block.Properties.from(Blocks.NETHERRACK)));
    public static final RegistryObject<Block> GLASS_STAIRS = BLOCKS.register("glass_stairs", () -> new StairsBlock(Blocks.GLASS::getDefaultState, Block.Properties.from(Blocks.GLASS)));
    public static final RegistryObject<Block> BONE_STAIRS = BLOCKS.register("bone_stairs", () -> new StairsBlock(Blocks.BONE_BLOCK::getDefaultState, Block.Properties.from(Blocks.BONE_BLOCK)));
    public static final RegistryObject<Block> LAPIS_STAIRS = BLOCKS.register("lapis_stairs", () -> new StairsBlock(Blocks.LAPIS_BLOCK::getDefaultState, Block.Properties.from(Blocks.LAPIS_BLOCK)));
    public static final RegistryObject<Block> IRON_STAIRS = BLOCKS.register("iron_stairs", () -> new StairsBlock(Blocks.IRON_BLOCK::getDefaultState, Block.Properties.from(Blocks.IRON_BLOCK)));
    public static final RegistryObject<Block> GOLD_STAIRS = BLOCKS.register("gold_stairs", () -> new StairsBlock(Blocks.GOLD_BLOCK::getDefaultState, Block.Properties.from(Blocks.GOLD_BLOCK)));
    public static final RegistryObject<Block> DIAMOND_STAIRS = BLOCKS.register("diamond_stairs", () -> new StairsBlock(Blocks.DIAMOND_BLOCK::getDefaultState, Block.Properties.from(Blocks.DIAMOND_BLOCK)));
    public static final RegistryObject<Block> EMERALD_STAIRS = BLOCKS.register("emerald_stairs", () -> new StairsBlock(Blocks.EMERALD_BLOCK::getDefaultState, Block.Properties.from(Blocks.EMERALD_BLOCK)));
    public static final RegistryObject<Block> SEA_LANTERN_STAIRS = BLOCKS.register("sea_lantern_stairs", () -> new StairsBlock(Blocks.SEA_LANTERN::getDefaultState, Block.Properties.from(Blocks.SEA_LANTERN)));
    public static final RegistryObject<Block> CLAY_STAIRS = BLOCKS.register("clay_stairs", () -> new StairsBlock(Blocks.CLAY::getDefaultState, Block.Properties.from(Blocks.CLAY)));
//    public static final RegistryObject<Block> OAK_LOG_STAIRS = BLOCKS.register("oak_log_stairs", () -> new StairsBlock(Blocks.OAK_LOG::getDefaultState, AbstractBlock.Properties.from(Blocks.OAK_LOG)));
//    public static final RegistryObject<Block> SPRUCE_LOG_STAIRS = BLOCKS.register("spruce_log_stairs", () -> new StairsBlock(Blocks.SPRUCE_LOG::getDefaultState, Block.Properties.from(Blocks.SPRUCE_LOG)));
//    public static final RegistryObject<Block> BIRCH_LOG_STAIRS = BLOCKS.register("birch_log_stairs", () -> new StairsBlock(Blocks.BIRCH_LOG::getDefaultState, Block.Properties.from(Blocks.BIRCH_LOG)));
//    public static final RegistryObject<Block> ACACIA_LOG_STAIRS = BLOCKS.register("acacia_log_stairs", () -> new StairsBlock(Blocks.ACACIA_LOG::getDefaultState, Block.Properties.from(Blocks.ACACIA_LOG)));
//    public static final RegistryObject<Block> JUNGLE_LOG_STAIRS = BLOCKS.register("jungle_log_stairs", () -> new StairsBlock(Blocks.JUNGLE_LOG::getDefaultState, Block.Properties.from(Blocks.JUNGLE_LOG)));
//    public static final RegistryObject<Block> DARK_OAK_LOG_STAIRS = BLOCKS.register("dark_oak_log_stairs", () -> new StairsBlock(Blocks.DARK_OAK_LOG::getDefaultState, Block.Properties.from(Blocks.DARK_OAK_LOG)));
    public static final RegistryObject<Block> COARSE_DIRT_STAIRS = BLOCKS.register("coarse_dirt_stairs", () -> new StairsBlock(Blocks.COARSE_DIRT::getDefaultState, Block.Properties.from(Blocks.COARSE_DIRT)));
    public static final RegistryObject<Block> WHITE_TERRACOTTA_STAIRS = BLOCKS.register("white_terracotta_stairs", () -> new StairsBlock(Blocks.WHITE_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.WHITE_TERRACOTTA)));
    public static final RegistryObject<Block> ORANGE_TERRACOTTA_STAIRS = BLOCKS.register("orange_terracotta_stairs", () -> new StairsBlock(Blocks.ORANGE_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.ORANGE_TERRACOTTA)));
    public static final RegistryObject<Block> MAGENTA_TERRACOTTA_STAIRS = BLOCKS.register("magenta_terracotta_stairs", () -> new StairsBlock(Blocks.MAGENTA_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.MAGENTA_TERRACOTTA)));
    public static final RegistryObject<Block> LIGHT_BLUE_TERRACOTTA_STAIRS = BLOCKS.register("light_blue_terracotta_stairs", () -> new StairsBlock(Blocks.LIGHT_BLUE_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.LIGHT_BLUE_TERRACOTTA)));
    public static final RegistryObject<Block> YELLOW_TERRACOTTA_STAIRS = BLOCKS.register("yellow_terracotta_stairs", () -> new StairsBlock(Blocks.YELLOW_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.YELLOW_TERRACOTTA)));
    public static final RegistryObject<Block> LIME_TERRACOTTA_STAIRS = BLOCKS.register("lime_terracotta_stairs", () -> new StairsBlock(Blocks.LIME_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.LIME_TERRACOTTA)));
    public static final RegistryObject<Block> PINK_TERRACOTTA_STAIRS = BLOCKS.register("pink_terracotta_stairs", () -> new StairsBlock(Blocks.PINK_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.PINK_TERRACOTTA)));
    public static final RegistryObject<Block> GRAY_TERRACOTTA_STAIRS = BLOCKS.register("gray_terracotta_stairs", () -> new StairsBlock(Blocks.GRAY_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.GRAY_TERRACOTTA)));
    public static final RegistryObject<Block> LIGHT_GRAY_TERRACOTTA_STAIRS = BLOCKS.register("light_gray_terracotta_stairs", () -> new StairsBlock(Blocks.LIGHT_GRAY_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.LIGHT_GRAY_TERRACOTTA)));
    public static final RegistryObject<Block> CYAN_TERRACOTTA_STAIRS = BLOCKS.register("cyan_terracotta_stairs", () -> new StairsBlock(Blocks.CYAN_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.CYAN_TERRACOTTA)));
    public static final RegistryObject<Block> PURPLE_TERRACOTTA_STAIRS = BLOCKS.register("purple_terracotta_stairs", () -> new StairsBlock(Blocks.PURPLE_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.PURPLE_TERRACOTTA)));
    public static final RegistryObject<Block> BLUE_TERRACOTTA_STAIRS = BLOCKS.register("blue_terracotta_stairs", () -> new StairsBlock(Blocks.BLUE_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.BLUE_TERRACOTTA)));
    public static final RegistryObject<Block> BROWN_TERRACOTTA_STAIRS = BLOCKS.register("brown_terracotta_stairs", () -> new StairsBlock(Blocks.BROWN_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.BROWN_TERRACOTTA)));
    public static final RegistryObject<Block> GREEN_TERRACOTTA_STAIRS = BLOCKS.register("green_terracotta_stairs", () -> new StairsBlock(Blocks.GREEN_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.GREEN_TERRACOTTA)));
    public static final RegistryObject<Block> RED_TERRACOTTA_STAIRS = BLOCKS.register("red_terracotta_stairs", () -> new StairsBlock(Blocks.RED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.RED_TERRACOTTA)));
    public static final RegistryObject<Block> BLACK_TERRACOTTA_STAIRS = BLOCKS.register("black_terracotta_stairs", () -> new StairsBlock(Blocks.BLACK_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.BLACK_TERRACOTTA)));
    public static final RegistryObject<Block> WHITE_CONCRETE_STAIRS = BLOCKS.register("white_concrete_stairs", () -> new StairsBlock(Blocks.WHITE_CONCRETE::getDefaultState, Block.Properties.from(Blocks.WHITE_CONCRETE)));
    public static final RegistryObject<Block> ORANGE_CONCRETE_STAIRS = BLOCKS.register("orange_concrete_stairs", () -> new StairsBlock(Blocks.ORANGE_CONCRETE::getDefaultState, Block.Properties.from(Blocks.ORANGE_CONCRETE)));
    public static final RegistryObject<Block> MAGENTA_CONCRETE_STAIRS = BLOCKS.register("magenta_concrete_stairs", () -> new StairsBlock(Blocks.MAGENTA_CONCRETE::getDefaultState, Block.Properties.from(Blocks.MAGENTA_CONCRETE)));
    public static final RegistryObject<Block> LIGHT_BLUE_CONCRETE_STAIRS = BLOCKS.register("light_blue_concrete_stairs", () -> new StairsBlock(Blocks.LIGHT_BLUE_CONCRETE::getDefaultState, Block.Properties.from(Blocks.LIGHT_BLUE_CONCRETE)));
    public static final RegistryObject<Block> YELLOW_CONCRETE_STAIRS = BLOCKS.register("yellow_concrete_stairs", () -> new StairsBlock(Blocks.YELLOW_CONCRETE::getDefaultState, Block.Properties.from(Blocks.YELLOW_CONCRETE)));
    public static final RegistryObject<Block> LIME_CONCRETE_STAIRS = BLOCKS.register("lime_concrete_stairs", () -> new StairsBlock(Blocks.LIME_CONCRETE::getDefaultState, Block.Properties.from(Blocks.LIME_CONCRETE)));
    public static final RegistryObject<Block> PINK_CONCRETE_STAIRS = BLOCKS.register("pink_concrete_stairs", () -> new StairsBlock(Blocks.PINK_CONCRETE::getDefaultState, Block.Properties.from(Blocks.PINK_CONCRETE)));
    public static final RegistryObject<Block> GRAY_CONCRETE_STAIRS = BLOCKS.register("gray_concrete_stairs", () -> new StairsBlock(Blocks.GRAY_CONCRETE::getDefaultState, Block.Properties.from(Blocks.GRAY_CONCRETE)));
    public static final RegistryObject<Block> LIGHT_GRAY_CONCRETE_STAIRS = BLOCKS.register("light_gray_concrete_stairs", () -> new StairsBlock(Blocks.LIGHT_GRAY_CONCRETE::getDefaultState, Block.Properties.from(Blocks.LIGHT_GRAY_CONCRETE)));
    public static final RegistryObject<Block> CYAN_CONCRETE_STAIRS = BLOCKS.register("cyan_concrete_stairs", () -> new StairsBlock(Blocks.CYAN_CONCRETE::getDefaultState, Block.Properties.from(Blocks.CYAN_CONCRETE)));
    public static final RegistryObject<Block> PURPLE_CONCRETE_STAIRS = BLOCKS.register("purple_concrete_stairs", () -> new StairsBlock(Blocks.PURPLE_CONCRETE::getDefaultState, Block.Properties.from(Blocks.PURPLE_CONCRETE)));
    public static final RegistryObject<Block> BLUE_CONCRETE_STAIRS = BLOCKS.register("blue_concrete_stairs", () -> new StairsBlock(Blocks.BLUE_CONCRETE::getDefaultState, Block.Properties.from(Blocks.BLUE_CONCRETE)));
    public static final RegistryObject<Block> BROWN_CONCRETE_STAIRS = BLOCKS.register("brown_concrete_stairs", () -> new StairsBlock(Blocks.BROWN_CONCRETE::getDefaultState, Block.Properties.from(Blocks.BROWN_CONCRETE)));
    public static final RegistryObject<Block> GREEN_CONCRETE_STAIRS = BLOCKS.register("green_concrete_stairs", () -> new StairsBlock(Blocks.GREEN_CONCRETE::getDefaultState, Block.Properties.from(Blocks.GREEN_CONCRETE)));
    public static final RegistryObject<Block> RED_CONCRETE_STAIRS = BLOCKS.register("red_concrete_stairs", () -> new StairsBlock(Blocks.RED_CONCRETE::getDefaultState, Block.Properties.from(Blocks.RED_CONCRETE)));
    public static final RegistryObject<Block> BLACK_CONCRETE_STAIRS = BLOCKS.register("black_concrete_stairs", () -> new StairsBlock(Blocks.BLACK_CONCRETE::getDefaultState, Block.Properties.from(Blocks.BLACK_CONCRETE)));
    public static final RegistryObject<Block> ICE_STAIRS = BLOCKS.register("ice_stairs", () -> new StairsBlock(Blocks.ICE::getDefaultState, Block.Properties.from(Blocks.ICE)));
    public static final RegistryObject<Block> PACKED_ICE_STAIRS = BLOCKS.register("packed_ice_stairs", () -> new StairsBlock(Blocks.PACKED_ICE::getDefaultState, Block.Properties.from(Blocks.PACKED_ICE)));
    public static final RegistryObject<Block> BLUE_ICE_STAIRS = BLOCKS.register("blue_ice_stairs", () -> new StairsBlock(Blocks.BLUE_ICE::getDefaultState, Block.Properties.from(Blocks.BLUE_ICE)));
    public static final RegistryObject<Block> WHITE_WOOL_STAIRS = BLOCKS.register("white_wool_stairs", () -> new StairsBlock(Blocks.WHITE_WOOL::getDefaultState, Block.Properties.from(Blocks.WHITE_WOOL)));
    public static final RegistryObject<Block> ORANGE_WOOL_STAIRS = BLOCKS.register("orange_wool_stairs", () -> new StairsBlock(Blocks.ORANGE_WOOL::getDefaultState, Block.Properties.from(Blocks.ORANGE_WOOL)));
    public static final RegistryObject<Block> MAGENTA_WOOL_STAIRS = BLOCKS.register("magenta_wool_stairs", () -> new StairsBlock(Blocks.MAGENTA_WOOL::getDefaultState, Block.Properties.from(Blocks.MAGENTA_WOOL)));
    public static final RegistryObject<Block> LIGHT_BLUE_WOOL_STAIRS = BLOCKS.register("light_blue_wool_stairs", () -> new StairsBlock(Blocks.LIGHT_BLUE_WOOL::getDefaultState, Block.Properties.from(Blocks.LIGHT_BLUE_WOOL)));
    public static final RegistryObject<Block> YELLOW_WOOL_STAIRS = BLOCKS.register("yellow_wool_stairs", () -> new StairsBlock(Blocks.YELLOW_WOOL::getDefaultState, Block.Properties.from(Blocks.YELLOW_WOOL)));
    public static final RegistryObject<Block> LIME_WOOL_STAIRS = BLOCKS.register("lime_wool_stairs", () -> new StairsBlock(Blocks.LIME_WOOL::getDefaultState, Block.Properties.from(Blocks.LIME_WOOL)));
    public static final RegistryObject<Block> PINK_WOOL_STAIRS = BLOCKS.register("pink_wool_stairs", () -> new StairsBlock(Blocks.PINK_WOOL::getDefaultState, Block.Properties.from(Blocks.PINK_WOOL)));
    public static final RegistryObject<Block> GRAY_WOOL_STAIRS = BLOCKS.register("gray_wool_stairs", () -> new StairsBlock(Blocks.GRAY_WOOL::getDefaultState, Block.Properties.from(Blocks.GRAY_WOOL)));
    public static final RegistryObject<Block> LIGHT_GRAY_WOOL_STAIRS = BLOCKS.register("light_gray_wool_stairs", () -> new StairsBlock(Blocks.LIGHT_GRAY_WOOL::getDefaultState, Block.Properties.from(Blocks.LIGHT_GRAY_WOOL)));
    public static final RegistryObject<Block> CYAN_WOOL_STAIRS = BLOCKS.register("cyan_wool_stairs", () -> new StairsBlock(Blocks.CYAN_WOOL::getDefaultState, Block.Properties.from(Blocks.CYAN_WOOL)));
    public static final RegistryObject<Block> PURPLE_WOOL_STAIRS = BLOCKS.register("purple_wool_stairs", () -> new StairsBlock(Blocks.PURPLE_WOOL::getDefaultState, Block.Properties.from(Blocks.PURPLE_WOOL)));
    public static final RegistryObject<Block> BLUE_WOOL_STAIRS = BLOCKS.register("blue_wool_stairs", () -> new StairsBlock(Blocks.BLUE_WOOL::getDefaultState, Block.Properties.from(Blocks.BLUE_WOOL)));
    public static final RegistryObject<Block> BROWN_WOOL_STAIRS = BLOCKS.register("brown_wool_stairs", () -> new StairsBlock(Blocks.BROWN_WOOL::getDefaultState, Block.Properties.from(Blocks.BROWN_WOOL)));
    public static final RegistryObject<Block> GREEN_WOOL_STAIRS = BLOCKS.register("green_wool_stairs", () -> new StairsBlock(Blocks.GREEN_WOOL::getDefaultState, Block.Properties.from(Blocks.GREEN_WOOL)));
    public static final RegistryObject<Block> RED_WOOL_STAIRS = BLOCKS.register("red_wool_stairs", () -> new StairsBlock(Blocks.RED_WOOL::getDefaultState, Block.Properties.from(Blocks.RED_WOOL)));
    public static final RegistryObject<Block> BLACK_WOOL_STAIRS = BLOCKS.register("black_wool_stairs", () -> new StairsBlock(Blocks.BLACK_WOOL::getDefaultState, Block.Properties.from(Blocks.BLACK_WOOL)));
    public static final RegistryObject<Block> WHITE_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("white_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.WHITE_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.WHITE_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> ORANGE_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("orange_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.ORANGE_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.ORANGE_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> MAGENTA_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("magenta_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.MAGENTA_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.MAGENTA_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> LIGHT_BLUE_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("light_blue_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> YELLOW_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("yellow_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.YELLOW_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.YELLOW_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> LIME_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("lime_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.LIME_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.LIME_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> PINK_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("pink_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.PINK_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.PINK_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> GRAY_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("gray_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.GRAY_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.GRAY_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> LIGHT_GRAY_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("light_gray_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> CYAN_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("cyan_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.CYAN_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.CYAN_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> PURPLE_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("purple_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.PURPLE_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.PURPLE_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> BLUE_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("blue_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.BLUE_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.BLUE_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> BROWN_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("brown_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.BROWN_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.BROWN_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> GREEN_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("green_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.GREEN_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.GREEN_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> RED_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("red_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.RED_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.RED_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> BLACK_GLAZED_TERRACOTTA_STAIRS = BLOCKS.register("black_glazed_terracotta_stairs", () -> new StairsBlock(Blocks.BLACK_GLAZED_TERRACOTTA::getDefaultState, Block.Properties.from(Blocks.BLACK_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> BAMBOO_STAIRS = BLOCKS.register("bamboo_stairs", () -> new StairsBlock(ModBlocks.BAMBOO_BLOCK.get()::getDefaultState, Block.Properties.from(ModBlocks.BAMBOO_BLOCK.get())));
    public static final RegistryObject<Block> NETHERITE_STAIRS = BLOCKS.register("netherite_stairs", () -> new StairsBlock(Blocks.field_235397_ng_::getDefaultState, AbstractBlock.Properties.from(Blocks.field_235397_ng_)));
    public static final RegistryObject<Block> QUARTZ_BRICK_STAIRS = BLOCKS.register("quartz_brick_stairs", () -> new StairsBlock(Blocks.field_235395_nI_::getDefaultState, AbstractBlock.Properties.from(Blocks.field_235395_nI_)));
//    public static final RegistryObject<Block> STRIPPED_OAK_LOG_STAIRS = BLOCKS.register("stripped_oak_log_stairs", () -> new StairsBlock(Blocks.STRIPPED_OAK_LOG::getDefaultState, Block.Properties.from(Blocks.STRIPPED_OAK_LOG)));
//    public static final RegistryObject<Block> STRIPPED_SPRUCE_LOG_STAIRS = BLOCKS.register("stripped_spruce_log_stairs", () -> new StairsBlock(Blocks.STRIPPED_SPRUCE_LOG::getDefaultState, Block.Properties.from(Blocks.STRIPPED_SPRUCE_LOG)));
//    public static final RegistryObject<Block> STRIPPED_BIRCH_LOG_STAIRS = BLOCKS.register("stripped_birch_log_stairs", () -> new StairsBlock(Blocks.STRIPPED_BIRCH_LOG::getDefaultState, Block.Properties.from(Blocks.STRIPPED_BIRCH_LOG)));
//    public static final RegistryObject<Block> STRIPPED_JUNGLE_LOG_STAIRS = BLOCKS.register("stripped_jungle_log_stairs", () -> new StairsBlock(Blocks.STRIPPED_JUNGLE_LOG::getDefaultState, Block.Properties.from(Blocks.STRIPPED_JUNGLE_LOG)));
//    public static final RegistryObject<Block> STRIPPED_ACACIA_LOG_STAIRS = BLOCKS.register("stripped_acacia_log_stairs", () -> new StairsBlock(Blocks.STRIPPED_ACACIA_LOG::getDefaultState, Block.Properties.from(Blocks.STRIPPED_ACACIA_LOG)));
//    public static final RegistryObject<Block> STRIPPED_DARK_OAK_LOG_STAIRS = BLOCKS.register("stripped_dark_oak_log_stairs", () -> new StairsBlock(Blocks.STRIPPED_DARK_OAK_LOG::getDefaultState, Block.Properties.from(Blocks.STRIPPED_DARK_OAK_LOG)));

    public static final RegistryObject<Block> GLOWSTONE_SLAB = BLOCKS.register("glowstone_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GLOWSTONE)));
    public static final RegistryObject<Block> ENDSTONE_SLAB = BLOCKS.register("endstone_slab", () -> new SlabBlock(Block.Properties.from(Blocks.END_STONE)));
    public static final RegistryObject<Block> OBSIDIAN_SLAB = BLOCKS.register("obsidian_slab", () -> new SlabBlock(Block.Properties.from(Blocks.OBSIDIAN)));
    public static final RegistryObject<Block> NETHERRACK_SLAB = BLOCKS.register("netherrack_slab", () -> new SlabBlock(Block.Properties.from(Blocks.NETHERRACK)));
    public static final RegistryObject<Block> GLASS_SLAB = BLOCKS.register("glass_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GLASS)));
    public static final RegistryObject<Block> BONE_SLAB = BLOCKS.register("bone_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BONE_BLOCK)));
    public static final RegistryObject<Block> LAPIS_SLAB = BLOCKS.register("lapis_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LAPIS_BLOCK)));
    public static final RegistryObject<Block> IRON_SLAB = BLOCKS.register("iron_slab", () -> new SlabBlock(Block.Properties.from(Blocks.IRON_BLOCK)));
    public static final RegistryObject<Block> GOLD_SLAB = BLOCKS.register("gold_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GOLD_BLOCK)));
    public static final RegistryObject<Block> DIAMOND_SLAB = BLOCKS.register("diamond_slab", () -> new SlabBlock(Block.Properties.from(Blocks.DIAMOND_BLOCK)));
    public static final RegistryObject<Block> EMERALD_SLAB = BLOCKS.register("emerald_slab", () -> new SlabBlock(Block.Properties.from(Blocks.EMERALD_BLOCK)));
    public static final RegistryObject<Block> SEA_LANTERN_SLAB = BLOCKS.register("sea_lantern_slab", () -> new SlabBlock(Block.Properties.from(Blocks.SEA_LANTERN)));
    public static final RegistryObject<Block> CLAY_SLAB = BLOCKS.register("clay_slab", () -> new SlabBlock(Block.Properties.from(Blocks.CLAY)));
//    public static final RegistryObject<Block> OAK_LOG_SLAB = BLOCKS.register("oak_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.OAK_LOG)));
//    public static final RegistryObject<Block> SPRUCE_LOG_SLAB = BLOCKS.register("spruce_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.SPRUCE_LOG)));
//    public static final RegistryObject<Block> BIRCH_LOG_SLAB = BLOCKS.register("birch_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BIRCH_LOG)));
//    public static final RegistryObject<Block> ACACIA_LOG_SLAB = BLOCKS.register("acacia_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.ACACIA_LOG)));
//    public static final RegistryObject<Block> JUNGLE_LOG_SLAB = BLOCKS.register("jungle_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.JUNGLE_LOG)));
//    public static final RegistryObject<Block> DARK_OAK_LOG_SLAB = BLOCKS.register("dark_oak_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.DARK_OAK_LOG)));
    public static final RegistryObject<Block> COARSE_DIRT_SLAB = BLOCKS.register("coarse_dirt_slab", () -> new SlabBlock(Block.Properties.from(Blocks.COARSE_DIRT)));
    public static final RegistryObject<Block> WHITE_TERRACOTTA_SLAB = BLOCKS.register("white_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.WHITE_TERRACOTTA)));
    public static final RegistryObject<Block> ORANGE_TERRACOTTA_SLAB = BLOCKS.register("orange_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.ORANGE_TERRACOTTA)));
    public static final RegistryObject<Block> MAGENTA_TERRACOTTA_SLAB = BLOCKS.register("magenta_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.MAGENTA_TERRACOTTA)));
    public static final RegistryObject<Block> LIGHT_BLUE_TERRACOTTA_SLAB = BLOCKS.register("light_blue_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIGHT_BLUE_TERRACOTTA)));
    public static final RegistryObject<Block> YELLOW_TERRACOTTA_SLAB = BLOCKS.register("yellow_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.YELLOW_TERRACOTTA)));
    public static final RegistryObject<Block> LIME_TERRACOTTA_SLAB = BLOCKS.register("lime_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIME_TERRACOTTA)));
    public static final RegistryObject<Block> PINK_TERRACOTTA_SLAB = BLOCKS.register("pink_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.PINK_TERRACOTTA)));
    public static final RegistryObject<Block> GRAY_TERRACOTTA_SLAB = BLOCKS.register("gray_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GRAY_TERRACOTTA)));
    public static final RegistryObject<Block> LIGHT_GRAY_TERRACOTTA_SLAB = BLOCKS.register("light_gray_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIGHT_GRAY_TERRACOTTA)));
    public static final RegistryObject<Block> CYAN_TERRACOTTA_SLAB = BLOCKS.register("cyan_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.CYAN_TERRACOTTA)));
    public static final RegistryObject<Block> PURPLE_TERRACOTTA_SLAB = BLOCKS.register("purple_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.PURPLE_TERRACOTTA)));
    public static final RegistryObject<Block> BLUE_TERRACOTTA_SLAB = BLOCKS.register("blue_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BLUE_TERRACOTTA)));
    public static final RegistryObject<Block> BROWN_TERRACOTTA_SLAB = BLOCKS.register("brown_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BROWN_TERRACOTTA)));
    public static final RegistryObject<Block> GREEN_TERRACOTTA_SLAB = BLOCKS.register("green_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GREEN_TERRACOTTA)));
    public static final RegistryObject<Block> RED_TERRACOTTA_SLAB = BLOCKS.register("red_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.RED_TERRACOTTA)));
    public static final RegistryObject<Block> BLACK_TERRACOTTA_SLAB = BLOCKS.register("black_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BLACK_TERRACOTTA)));
    public static final RegistryObject<Block> WHITE_CONCRETE_SLAB = BLOCKS.register("white_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.WHITE_CONCRETE)));
    public static final RegistryObject<Block> ORANGE_CONCRETE_SLAB = BLOCKS.register("orange_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.ORANGE_CONCRETE)));
    public static final RegistryObject<Block> MAGENTA_CONCRETE_SLAB = BLOCKS.register("magenta_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.MAGENTA_CONCRETE)));
    public static final RegistryObject<Block> LIGHT_BLUE_CONCRETE_SLAB = BLOCKS.register("light_blue_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIGHT_BLUE_CONCRETE)));
    public static final RegistryObject<Block> YELLOW_CONCRETE_SLAB = BLOCKS.register("yellow_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.YELLOW_CONCRETE)));
    public static final RegistryObject<Block> LIME_CONCRETE_SLAB = BLOCKS.register("lime_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIME_CONCRETE)));
    public static final RegistryObject<Block> PINK_CONCRETE_SLAB = BLOCKS.register("pink_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.PINK_CONCRETE)));
    public static final RegistryObject<Block> GRAY_CONCRETE_SLAB = BLOCKS.register("gray_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GRAY_CONCRETE)));
    public static final RegistryObject<Block> LIGHT_GRAY_CONCRETE_SLAB = BLOCKS.register("light_gray_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIGHT_GRAY_CONCRETE)));
    public static final RegistryObject<Block> CYAN_CONCRETE_SLAB = BLOCKS.register("cyan_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.CYAN_CONCRETE)));
    public static final RegistryObject<Block> PURPLE_CONCRETE_SLAB = BLOCKS.register("purple_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.PURPLE_CONCRETE)));
    public static final RegistryObject<Block> BLUE_CONCRETE_SLAB = BLOCKS.register("blue_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BLUE_CONCRETE)));
    public static final RegistryObject<Block> BROWN_CONCRETE_SLAB = BLOCKS.register("brown_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BROWN_CONCRETE)));
    public static final RegistryObject<Block> GREEN_CONCRETE_SLAB = BLOCKS.register("green_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GREEN_CONCRETE)));
    public static final RegistryObject<Block> RED_CONCRETE_SLAB = BLOCKS.register("red_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.RED_CONCRETE)));
    public static final RegistryObject<Block> BLACK_CONCRETE_SLAB = BLOCKS.register("black_concrete_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BLACK_CONCRETE)));
    public static final RegistryObject<Block> ICE_SLAB = BLOCKS.register("ice_slab", () -> new SlabBlock(Block.Properties.from(Blocks.ICE)));
    public static final RegistryObject<Block> PACKED_ICE_SLAB = BLOCKS.register("packed_ice_slab", () -> new SlabBlock(Block.Properties.from(Blocks.PACKED_ICE)));
    public static final RegistryObject<Block> BLUE_ICE_SLAB = BLOCKS.register("blue_ice_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BLUE_ICE)));
    public static final RegistryObject<Block> WHITE_WOOL_SLAB = BLOCKS.register("white_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.WHITE_WOOL)));
    public static final RegistryObject<Block> ORANGE_WOOL_SLAB = BLOCKS.register("orange_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.ORANGE_WOOL)));
    public static final RegistryObject<Block> MAGENTA_WOOL_SLAB = BLOCKS.register("magenta_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.MAGENTA_WOOL)));
    public static final RegistryObject<Block> LIGHT_BLUE_WOOL_SLAB = BLOCKS.register("light_blue_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIGHT_BLUE_WOOL)));
    public static final RegistryObject<Block> YELLOW_WOOL_SLAB = BLOCKS.register("yellow_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.YELLOW_WOOL)));
    public static final RegistryObject<Block> LIME_WOOL_SLAB = BLOCKS.register("lime_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIME_WOOL)));
    public static final RegistryObject<Block> PINK_WOOL_SLAB = BLOCKS.register("pink_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.PINK_WOOL)));
    public static final RegistryObject<Block> GRAY_WOOL_SLAB = BLOCKS.register("gray_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GRAY_WOOL)));
    public static final RegistryObject<Block> LIGHT_GRAY_WOOL_SLAB = BLOCKS.register("light_gray_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIGHT_GRAY_WOOL)));
    public static final RegistryObject<Block> CYAN_WOOL_SLAB = BLOCKS.register("cyan_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.CYAN_WOOL)));
    public static final RegistryObject<Block> PURPLE_WOOL_SLAB = BLOCKS.register("purple_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.PURPLE_WOOL)));
    public static final RegistryObject<Block> BLUE_WOOL_SLAB = BLOCKS.register("blue_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BLUE_WOOL)));
    public static final RegistryObject<Block> BROWN_WOOL_SLAB = BLOCKS.register("brown_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BROWN_WOOL)));
    public static final RegistryObject<Block> GREEN_WOOL_SLAB = BLOCKS.register("green_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GREEN_WOOL)));
    public static final RegistryObject<Block> RED_WOOL_SLAB = BLOCKS.register("red_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.RED_WOOL)));
    public static final RegistryObject<Block> BLACK_WOOL_SLAB = BLOCKS.register("black_wool_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BLACK_WOOL)));
    public static final RegistryObject<Block> WHITE_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("white_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.WHITE_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> ORANGE_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("orange_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.ORANGE_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> MAGENTA_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("magenta_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.MAGENTA_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> LIGHT_BLUE_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("light_blue_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> YELLOW_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("yellow_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.YELLOW_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> LIME_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("lime_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIME_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> PINK_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("pink_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.PINK_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> GRAY_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("gray_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GRAY_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> LIGHT_GRAY_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("light_gray_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> CYAN_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("cyan_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.CYAN_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> PURPLE_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("purple_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.PURPLE_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> BLUE_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("blue_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BLUE_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> BROWN_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("brown_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BROWN_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> GREEN_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("green_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.GREEN_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> RED_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("red_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.RED_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> BLACK_GLAZED_TERRACOTTA_SLAB = BLOCKS.register("black_glazed_terracotta_slab", () -> new SlabBlock(Block.Properties.from(Blocks.BLACK_GLAZED_TERRACOTTA)));
    public static final RegistryObject<Block> BAMBOO_SLAB = BLOCKS.register("bamboo_slab", () -> new SlabBlock(Block.Properties.from(ModBlocks.BAMBOO_BLOCK.get())));
    public static final RegistryObject<Block> NETHERITE_SLAB = BLOCKS.register("netherite_slab", () -> new SlabBlock(Block.Properties.from(Blocks.field_235397_ng_)));
    public static final RegistryObject<Block> QUARTZ_BRICK_SLAB = BLOCKS.register("quartz_brick_slab", () -> new SlabBlock(Block.Properties.from(Blocks.field_235395_nI_)));
//    public static final RegistryObject<Block> STRIPPED_OAK_LOG_SLAB = BLOCKS.register("stripped_oak_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.STRIPPED_OAK_LOG)));
//    public static final RegistryObject<Block> STRIPPED_SPRUCE_LOG_SLAB = BLOCKS.register("stripped_spruce_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.STRIPPED_SPRUCE_LOG)));
//    public static final RegistryObject<Block> STRIPPED_BIRCH_LOG_SLAB = BLOCKS.register("stripped_birch_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.STRIPPED_BIRCH_LOG)));
//    public static final RegistryObject<Block> STRIPPED_JUNGLE_LOG_SLAB = BLOCKS.register("stripped_jungle_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.STRIPPED_JUNGLE_LOG)));
//    public static final RegistryObject<Block> STRIPPED_ACACIA_LOG_SLAB = BLOCKS.register("stripped_acacia_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.STRIPPED_ACACIA_LOG)));
//    public static final RegistryObject<Block> STRIPPED_DARK_OAK_LOG_SLAB = BLOCKS.register("stripped_dark_oak_log_slab", () -> new SlabBlock(Block.Properties.from(Blocks.STRIPPED_DARK_OAK_LOG)));

    public static final RegistryObject<Block> GLOWSTONE_WALL = BLOCKS.register("glowstone_wall", () -> new WallBlock(Block.Properties.from(Blocks.GLOWSTONE)));
    public static final RegistryObject<Block> ENDSTONE_WALL = BLOCKS.register("endstone_wall", () -> new WallBlock(AbstractBlock.Properties.from(Blocks.END_STONE)));
    public static final RegistryObject<Block> OBSIDIAN_WALL = BLOCKS.register("obsidian_wall", () -> new WallBlock(Block.Properties.from(Blocks.OBSIDIAN)));
    public static final RegistryObject<Block> NETHERRACK_WALL = BLOCKS.register("netherrack_wall", () -> new WallBlock(Block.Properties.from(Blocks.NETHERRACK)));
    public static final RegistryObject<Block> BONE_WALL = BLOCKS.register("bone_wall", () -> new WallBlock(Block.Properties.from(Blocks.BONE_BLOCK)));
    public static final RegistryObject<Block> LAPIS_WALL = BLOCKS.register("lapis_wall", () -> new WallBlock(Block.Properties.from(Blocks.LAPIS_BLOCK)));
    public static final RegistryObject<Block> IRON_WALL = BLOCKS.register("iron_wall", () -> new WallBlock(Block.Properties.from(Blocks.IRON_BLOCK)));
    public static final RegistryObject<Block> GOLD_WALL = BLOCKS.register("gold_wall", () -> new WallBlock(Block.Properties.from(Blocks.GOLD_BLOCK)));
    public static final RegistryObject<Block> DIAMOND_WALL = BLOCKS.register("diamond_wall", () -> new WallBlock(Block.Properties.from(Blocks.DIAMOND_BLOCK)));
    public static final RegistryObject<Block> EMERALD_WALL = BLOCKS.register("emerald_wall", () -> new WallBlock(Block.Properties.from(Blocks.EMERALD_BLOCK)));
    public static final RegistryObject<Block> PURPUR_WALL = BLOCKS.register("purpur_wall", () -> new WallBlock(Block.Properties.from(Blocks.PURPUR_BLOCK)));
    public static final RegistryObject<Block> CLAY_WALL = BLOCKS.register("clay_wall", () -> new WallBlock(Block.Properties.from(Blocks.CLAY)));
    public static final RegistryObject<Block> WHITE_TERRACOTTA_WALL = BLOCKS.register("white_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.WHITE_TERRACOTTA)));
    public static final RegistryObject<Block> ORANGE_TERRACOTTA_WALL = BLOCKS.register("orange_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.ORANGE_TERRACOTTA)));
    public static final RegistryObject<Block> MAGENTA_TERRACOTTA_WALL = BLOCKS.register("magenta_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.MAGENTA_TERRACOTTA)));
    public static final RegistryObject<Block> LIGHT_BLUE_TERRACOTTA_WALL = BLOCKS.register("light_blue_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.LIGHT_BLUE_TERRACOTTA)));
    public static final RegistryObject<Block> YELLOW_TERRACOTTA_WALL = BLOCKS.register("yellow_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.YELLOW_TERRACOTTA)));
    public static final RegistryObject<Block> LIME_TERRACOTTA_WALL = BLOCKS.register("lime_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.LIME_TERRACOTTA)));
    public static final RegistryObject<Block> PINK_TERRACOTTA_WALL = BLOCKS.register("pink_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.PINK_TERRACOTTA)));
    public static final RegistryObject<Block> GRAY_TERRACOTTA_WALL = BLOCKS.register("gray_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.GRAY_TERRACOTTA)));
    public static final RegistryObject<Block> LIGHT_GRAY_TERRACOTTA_WALL = BLOCKS.register("light_gray_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.LIGHT_GRAY_TERRACOTTA)));
    public static final RegistryObject<Block> CYAN_TERRACOTTA_WALL = BLOCKS.register("cyan_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.CYAN_TERRACOTTA)));
    public static final RegistryObject<Block> PURPLE_TERRACOTTA_WALL = BLOCKS.register("purple_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.PURPLE_TERRACOTTA)));
    public static final RegistryObject<Block> BLUE_TERRACOTTA_WALL = BLOCKS.register("blue_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.BLUE_TERRACOTTA)));
    public static final RegistryObject<Block> BROWN_TERRACOTTA_WALL = BLOCKS.register("brown_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.BROWN_TERRACOTTA)));
    public static final RegistryObject<Block> GREEN_TERRACOTTA_WALL = BLOCKS.register("green_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.GREEN_TERRACOTTA)));
    public static final RegistryObject<Block> RED_TERRACOTTA_WALL = BLOCKS.register("red_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.RED_TERRACOTTA)));
    public static final RegistryObject<Block> BLACK_TERRACOTTA_WALL = BLOCKS.register("black_terracotta_wall", () -> new WallBlock(Block.Properties.from(Blocks.BLACK_TERRACOTTA)));
    public static final RegistryObject<Block> WHITE_CONCRETE_WALL = BLOCKS.register("white_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.WHITE_CONCRETE)));
    public static final RegistryObject<Block> ORANGE_CONCRETE_WALL = BLOCKS.register("orange_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.ORANGE_CONCRETE)));
    public static final RegistryObject<Block> MAGENTA_CONCRETE_WALL = BLOCKS.register("magenta_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.MAGENTA_CONCRETE)));
    public static final RegistryObject<Block> LIGHT_BLUE_CONCRETE_WALL = BLOCKS.register("light_blue_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.LIGHT_BLUE_CONCRETE)));
    public static final RegistryObject<Block> YELLOW_CONCRETE_WALL = BLOCKS.register("yellow_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.YELLOW_CONCRETE)));
    public static final RegistryObject<Block> LIME_CONCRETE_WALL = BLOCKS.register("lime_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.LIME_CONCRETE)));
    public static final RegistryObject<Block> PINK_CONCRETE_WALL = BLOCKS.register("pink_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.PINK_CONCRETE)));
    public static final RegistryObject<Block> GRAY_CONCRETE_WALL = BLOCKS.register("gray_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.GRAY_CONCRETE)));
    public static final RegistryObject<Block> LIGHT_GRAY_CONCRETE_WALL = BLOCKS.register("light_gray_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.LIGHT_GRAY_CONCRETE)));
    public static final RegistryObject<Block> CYAN_CONCRETE_WALL = BLOCKS.register("cyan_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.CYAN_CONCRETE)));
    public static final RegistryObject<Block> PURPLE_CONCRETE_WALL = BLOCKS.register("purple_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.PURPLE_CONCRETE)));
    public static final RegistryObject<Block> BLUE_CONCRETE_WALL = BLOCKS.register("blue_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.BLUE_CONCRETE)));
    public static final RegistryObject<Block> BROWN_CONCRETE_WALL = BLOCKS.register("brown_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.BROWN_CONCRETE)));
    public static final RegistryObject<Block> GREEN_CONCRETE_WALL = BLOCKS.register("green_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.GREEN_CONCRETE)));
    public static final RegistryObject<Block> RED_CONCRETE_WALL = BLOCKS.register("red_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.RED_CONCRETE)));
    public static final RegistryObject<Block> BLACK_CONCRETE_WALL = BLOCKS.register("black_concrete_wall", () -> new WallBlock(Block.Properties.from(Blocks.BLACK_CONCRETE)));
    public static final RegistryObject<Block> POLISHED_GRANITE_WALL = BLOCKS.register("polished_granite_wall", () -> new WallBlock(Block.Properties.from(Blocks.POLISHED_GRANITE)));
    public static final RegistryObject<Block> POLISHED_DIORITE_WALL = BLOCKS.register("polished_diorite_wall", () -> new WallBlock(Block.Properties.from(Blocks.POLISHED_DIORITE)));
    public static final RegistryObject<Block> POLISHED_ANDESITE_WALL = BLOCKS.register("polished_andesite_wall", () -> new WallBlock(Block.Properties.from(Blocks.POLISHED_ANDESITE)));
    public static final RegistryObject<Block> NETHERITE_WALL = BLOCKS.register("netherite_wall", () -> new WallBlock(Block.Properties.from(Blocks.field_235397_ng_)));
    public static final RegistryObject<Block> QUARTZ_BRICK_WALL = BLOCKS.register("quartz_brick_wall", () -> new WallBlock(Block.Properties.from(Blocks.field_235395_nI_)));

//    public static final RegistryObject<Block> OAK_LOG_FENCE = BLOCKS.register("oak_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.OAK_LOG)));
//    public static final RegistryObject<Block> BIRCH_LOG_FENCE = BLOCKS.register("birch_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.BIRCH_LOG)));
//    public static final RegistryObject<Block> SPRUCE_LOG_FENCE = BLOCKS.register("spruce_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.SPRUCE_LOG)));
//    public static final RegistryObject<Block> JUNGLE_LOG_FENCE = BLOCKS.register("jungle_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.JUNGLE_LOG)));
//    public static final RegistryObject<Block> ACACIA_LOG_FENCE = BLOCKS.register("acacia_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.ACACIA_LOG)));
//    public static final RegistryObject<Block> DARK_OAK_LOG_FENCE = BLOCKS.register("dark_oak_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.DARK_OAK_LOG)));
    public static final RegistryObject<Block> RED_NETHER_BRICK_FENCE = BLOCKS.register("red_nether_brick_fence", () -> new FenceBlock(Block.Properties.from(Blocks.RED_NETHER_BRICKS)));
//    public static final RegistryObject<Block> STRIPPED_OAK_LOG_FENCE = BLOCKS.register("stripped_oak_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.STRIPPED_OAK_LOG)));
//    public static final RegistryObject<Block> STRIPPED_SPRUCE_LOG_FENCE = BLOCKS.register("stripped_spruce_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.STRIPPED_SPRUCE_LOG)));
//    public static final RegistryObject<Block> STRIPPED_BIRCH_LOG_FENCE = BLOCKS.register("stripped_birch_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.STRIPPED_BIRCH_LOG)));
//    public static final RegistryObject<Block> STRIPPED_ACACIA_LOG_FENCE = BLOCKS.register("stripped_acacia_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.STRIPPED_ACACIA_LOG)));
//    public static final RegistryObject<Block> STRIPPED_JUNGLE_LOG_FENCE = BLOCKS.register("stripped_jungle_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.STRIPPED_JUNGLE_LOG)));
//    public static final RegistryObject<Block> STRIPPED_DARK_OAK_LOG_FENCE = BLOCKS.register("stripped_dark_oak_log_fence", () -> new FenceBlock(Block.Properties.from(Blocks.STRIPPED_DARK_OAK_LOG)));
    public static final RegistryObject<Block> BAMBOO_FENCE = BLOCKS.register("bamboo_fence", () -> new FenceBlock(Block.Properties.from(ModBlocks.BAMBOO_BLOCK.get())));


}
